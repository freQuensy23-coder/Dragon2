PART
{
	
	name = Falcon9FTdecouplerinline
	module = Part
	author = JNH
	//mesh = model.mu
	MODEL
	{
		model = JNH/Parts/heavy_decoupler_inline
		scale = 1, 1, 1
    }
	
	
	scale = 1.0
	rescaleFactor = .95

	
	node_stack_bottom = 0.0, -2.7, 0.0, 0.0, -1.0, 0.0, 3
	node_stack_top = 0.0, 2.9, 0.0, 0.0, 1.0, 0.0, 3

	TechRequired = metaMaterials
	entryCost = 3500
	cost = 500
	category = Coupling
	subcategory = 0
	title = Falcon Heavy Interstage decoupler
	manufacturer = Kerbalized SpaceX
	description = Interstage decoupler for the falcon Heavy.

	tags = falcon spaceX

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 9
	maxTemp = 2000 //2500
	bulkheadProfiles = size4

	fuelCrossFeed = False

	//breakingForce = 175000
	//breakingTorque = 175000

	stageOffset = 1
	childStageOffset = 1

	buoyancy = 0.5
	buoyancyUseSine = False

	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 4000
		explosiveNodeID = top
	}
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}
	
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
